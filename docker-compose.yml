version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: crypto_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: crypto_user
      POSTGRES_PASSWORD: crypto_password
      POSTGRES_DB: crypto_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crypto_user -d crypto_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: crypto_clickhouse
    restart: unless-stopped
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./migrations:/docker-entrypoint-initdb.d
    environment:
      CLICKHOUSE_DB: crypto_platform
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: crypto_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  poller:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crypto_poller
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # PostgreSQL
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: crypto_platform
      POSTGRES_USERNAME: crypto_user
      POSTGRES_PASSWORD: crypto_password
      POSTGRES_SSLMODE: disable
      
      # ClickHouse
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 9000
      CLICKHOUSE_DATABASE: crypto_platform
      CLICKHOUSE_USERNAME: default
      CLICKHOUSE_PASSWORD: ""
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      
      # Polling Configuration
      POLL_INTERVAL: 15s
      MAX_CONCURRENT_REQUESTS: 50
      STAGGER_DELAY: 500ms
      
      # API Server
      SERVER_PORT: :8080
      ENVIRONMENT: development
      LOG_LEVEL: INFO
      
    ports:
      - "8080:8080"
    volumes:
      - ./configs:/app/configs:ro
    restart: unless-stopped

  # Optional: API service separate from poller
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crypto_api
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # PostgreSQL
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: crypto_platform
      POSTGRES_USERNAME: crypto_user
      POSTGRES_PASSWORD: crypto_password
      POSTGRES_SSLMODE: disable
      
      # ClickHouse
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 9000
      CLICKHOUSE_DATABASE: crypto_platform
      CLICKHOUSE_USERNAME: default
      CLICKHOUSE_PASSWORD: ""
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      
      # API Configuration
      SERVER_PORT: :8081
      ENVIRONMENT: development
      LOG_LEVEL: INFO
      SERVICE_MODE: api # Different mode for API-only service
      
    ports:
      - "8081:8081"
    restart: unless-stopped

volumes:
  postgres_data:
  clickhouse_data:
  redis_data:
